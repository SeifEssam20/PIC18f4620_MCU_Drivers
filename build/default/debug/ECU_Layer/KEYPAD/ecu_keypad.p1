Version 4.0 HI-TECH Software Intermediate Code
"66 ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h
[; ;ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h: 66: typedef struct {
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . port pin direction logic ]
"23 ECU_Layer/KEYPAD/ecu_keypad.h
[; ;ECU_Layer/KEYPAD/ecu_keypad.h: 23: typedef struct{
[s S274 `S273 -> 4 `i `S273 -> 4 `i ]
[n S274 . keypad_row_pins keypad_column_pins ]
"80 ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h
[; ;ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h: 80: Std_ReturnType gpio_pin_init(const pin_config_t *pin_config);
[v _gpio_pin_init `(uc ~T0 @X0 0 ef1`*CS273 ]
"75
[; ;ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h: 75: Std_ReturnType gpio_pin_direction_init(const pin_config_t *pin_config);
[v _gpio_pin_direction_init `(uc ~T0 @X0 0 ef1`*CS273 ]
"60 ECU_Layer/KEYPAD/ecu_keypad.c
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 60:                 retVal = gpio_pin_wrt_logic(&(keypad_obj->keypad_row_pins[counter]),LOW);
[c E2968 0 1 .. ]
[n E2968 . LOW HIGH  ]
"77 ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h
[; ;ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h: 77: Std_ReturnType gpio_pin_wrt_logic(const pin_config_t *pin_config, logic_t logic);
[v _gpio_pin_wrt_logic `(uc ~T0 @X0 0 ef2`*CS273`E2968 ]
[v F192 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\builtins.h
[v __delay `JF192 ~T0 @X0 0 e ]
[p i __delay ]
"78 ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h
[; ;ECU_Layer/KEYPAD/../../MCAL_Layer/GPIO/hal_gpio.h: 78: Std_ReturnType gpio_pin_rd_logic(const pin_config_t *pin_config, logic_t *logic);
[v _gpio_pin_rd_logic `(uc ~T0 @X0 0 ef2`*CS273`*E2968 ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\../proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
[v F3038 `Cuc ~T0 @X0 -> 4 `i t ]
"9 ECU_Layer/KEYPAD/ecu_keypad.c
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 9: static const uint8 btn_values[4][4] = {
[v _btn_values `F3038 ~T0 @X0 -> 4 `i s ]
[i _btn_values
:U ..
:U ..
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 57 `ui `uc
-> -> 47 `ui `uc
..
:U ..
-> -> 52 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 42 `ui `uc
..
:U ..
-> -> 49 `ui `uc
-> -> 50 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
..
:U ..
-> -> 35 `ui `uc
-> -> 48 `ui `uc
-> -> 61 `ui `uc
-> -> 43 `ui `uc
..
..
]
"24
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 24: Std_ReturnType keypad_init(const keypad_t * keypad_obj){
[v _keypad_init `(uc ~T0 @X0 1 ef1`*CS274 ]
{
[e :U _keypad_init ]
[v _keypad_obj `*CS274 ~T0 @X0 1 r1 ]
[f ]
"25
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 25:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"26
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 26:     uint8 r_counter = 0,c_counter = 0;
[v _r_counter `uc ~T0 @X0 1 a ]
[e = _r_counter -> -> 0 `i `uc ]
[v _c_counter `uc ~T0 @X0 1 a ]
[e = _c_counter -> -> 0 `i `uc ]
"27
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 27:     if(((void*)0) == keypad_obj){
[e $ ! == -> -> -> 0 `i `*v `*CS274 _keypad_obj 276  ]
{
"28
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 28:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"29
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 29:     }
}
[e $U 277  ]
"30
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 30:     else{
[e :U 276 ]
{
"31
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 31:         for(r_counter = 0;r_counter<4;r_counter++){
{
[e = _r_counter -> -> 0 `i `uc ]
[e $ < -> _r_counter `i -> 4 `i 278  ]
[e $U 279  ]
[e :U 278 ]
{
"32
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 32:             retVal = gpio_pin_init(&(keypad_obj->keypad_row_pins[r_counter]));
[e = _retVal ( _gpio_pin_init (1 &U *U + &U . *U _keypad_obj 0 * -> _r_counter `ux -> -> # *U &U . *U _keypad_obj 0 `ui `ux ]
"33
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 33:         }
}
[e ++ _r_counter -> -> 1 `i `uc ]
[e $ < -> _r_counter `i -> 4 `i 278  ]
[e :U 279 ]
}
"34
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 34:         for(c_counter = 0;c_counter<4;c_counter++){
{
[e = _c_counter -> -> 0 `i `uc ]
[e $ < -> _c_counter `i -> 4 `i 281  ]
[e $U 282  ]
[e :U 281 ]
{
"35
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 35:             retVal = gpio_pin_direction_init(&(keypad_obj->keypad_column_pins[c_counter]));
[e = _retVal ( _gpio_pin_direction_init (1 &U *U + &U . *U _keypad_obj 1 * -> _c_counter `ux -> -> # *U &U . *U _keypad_obj 1 `ui `ux ]
"36
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 36:         }
}
[e ++ _c_counter -> -> 1 `i `uc ]
[e $ < -> _c_counter `i -> 4 `i 281  ]
[e :U 282 ]
}
"38
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 38:     }
}
[e :U 277 ]
"39
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 39:     return retVal;
[e ) _retVal ]
[e $UE 275  ]
"40
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 40: }
[e :UE 275 ]
}
"50
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 50: Std_ReturnType keypad_get_val(const keypad_t * keypad_obj, uint8 * val){
[v _keypad_get_val `(uc ~T0 @X0 1 ef2`*CS274`*uc ]
{
[e :U _keypad_get_val ]
[v _keypad_obj `*CS274 ~T0 @X0 1 r1 ]
[v _val `*uc ~T0 @X0 1 r2 ]
[f ]
"51
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 51:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"52
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 52:     uint8 r_counter = 0, c_counter = 0, counter = 0;
[v _r_counter `uc ~T0 @X0 1 a ]
[e = _r_counter -> -> 0 `i `uc ]
[v _c_counter `uc ~T0 @X0 1 a ]
[e = _c_counter -> -> 0 `i `uc ]
[v _counter `uc ~T0 @X0 1 a ]
[e = _counter -> -> 0 `i `uc ]
"53
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 53:     uint8 c_logic = 0;
[v _c_logic `uc ~T0 @X0 1 a ]
[e = _c_logic -> -> 0 `i `uc ]
"54
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 54:     if((((void*)0) == keypad_obj) || (((void*)0) == val)){
[e $ ! || == -> -> -> 0 `i `*v `*CS274 _keypad_obj == -> -> -> 0 `i `*v `*uc _val 285  ]
{
"55
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 55:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"56
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 56:     }
}
[e $U 286  ]
"57
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 57:     else{
[e :U 285 ]
{
"58
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 58:         for(r_counter = 0;r_counter < 4;r_counter++){
{
[e = _r_counter -> -> 0 `i `uc ]
[e $ < -> _r_counter `i -> 4 `i 287  ]
[e $U 288  ]
[e :U 287 ]
{
"59
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 59:             for(counter = 0;counter < 4;counter++){
{
[e = _counter -> -> 0 `i `uc ]
[e $ < -> _counter `i -> 4 `i 290  ]
[e $U 291  ]
[e :U 290 ]
{
"60
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 60:                 retVal = gpio_pin_wrt_logic(&(keypad_obj->keypad_row_pins[counter]),LOW);
[e = _retVal ( _gpio_pin_wrt_logic (2 , &U *U + &U . *U _keypad_obj 0 * -> _counter `ux -> -> # *U &U . *U _keypad_obj 0 `ui `ux . `E2968 0 ]
"61
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 61:             }
}
[e ++ _counter -> -> 1 `i `uc ]
[e $ < -> _counter `i -> 4 `i 290  ]
[e :U 291 ]
}
"62
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 62:             gpio_pin_wrt_logic(&(keypad_obj->keypad_row_pins[r_counter]),HIGH);
[e ( _gpio_pin_wrt_logic (2 , &U *U + &U . *U _keypad_obj 0 * -> _r_counter `ux -> -> # *U &U . *U _keypad_obj 0 `ui `ux . `E2968 1 ]
"63
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 63:             _delay((unsigned long)((25)*(800000/4000.0)));
[e ( __delay (1 -> * -> -> 25 `i `d / -> -> 800000 `l `d .4000.0 `ul ]
"64
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 64:             for(c_counter = 0;c_counter < 4;c_counter++){
{
[e = _c_counter -> -> 0 `i `uc ]
[e $ < -> _c_counter `i -> 4 `i 293  ]
[e $U 294  ]
[e :U 293 ]
{
"65
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 65:                 retVal = gpio_pin_rd_logic(&(keypad_obj->keypad_column_pins[c_counter]),&(c_logic));
[e = _retVal ( _gpio_pin_rd_logic (2 , &U *U + &U . *U _keypad_obj 1 * -> _c_counter `ux -> -> # *U &U . *U _keypad_obj 1 `ui `ux -> &U _c_logic `*E2968 ]
"66
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 66:                 if(HIGH == c_logic){
[e $ ! == -> . `E2968 1 `i -> _c_logic `i 296  ]
{
"67
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 67:                     *val = btn_values[r_counter][c_counter];
[e = *U _val *U + &U *U + &U _btn_values * -> _r_counter `ux -> * -> # *U &U *U &U _btn_values `ui -> -> 4 `i `ui `ux * -> _c_counter `ux -> -> # *U &U *U + &U _btn_values * -> _r_counter `ux -> * -> # *U &U *U &U _btn_values `ui -> -> 4 `i `ui `ux `ui `ux ]
"68
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 68:                 }
}
[e :U 296 ]
"69
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 69:             }
}
[e ++ _c_counter -> -> 1 `i `uc ]
[e $ < -> _c_counter `i -> 4 `i 293  ]
[e :U 294 ]
}
"71
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 71:         }
}
[e ++ _r_counter -> -> 1 `i `uc ]
[e $ < -> _r_counter `i -> 4 `i 287  ]
[e :U 288 ]
}
"72
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 72:     }
}
[e :U 286 ]
"73
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 73:     return retVal;
[e ) _retVal ]
[e $UE 284  ]
"74
[; ;ECU_Layer/KEYPAD/ecu_keypad.c: 74: }
[e :UE 284 ]
}
