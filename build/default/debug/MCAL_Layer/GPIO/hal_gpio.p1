Version 4.0 HI-TECH Software Intermediate Code
"1380 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\../proc/pic18f4620.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1602
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1824
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2046
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2268
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"52
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"189
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"360
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"535
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"677
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"880
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"992
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1104
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1216
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1328
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"66 MCAL_Layer/GPIO/hal_gpio.h
[; ;MCAL_Layer/GPIO/hal_gpio.h: 66: typedef struct {
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . port pin direction logic ]
"42 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 42:     }
[c E2972 0 1 .. ]
[n E2972 . OUTPUT INPUT  ]
"58
[; ;MCAL_Layer/GPIO/hal_gpio.c: 58: Std_ReturnType gpio_pin_wrt_logic(const pin_config_t *pin_config, logic_t logic){
[c E2968 0 1 .. ]
[n E2968 . LOW HIGH  ]
"178
[; ;MCAL_Layer/GPIO/hal_gpio.c: 178: Std_ReturnType gpio_port_direction_init(port_index_t port, uint8 direction){
[c E2986 0 1 2 3 4 .. ]
[n E2986 . PORTA_index PORTB_index PORTC_index PORTD_index PORTE_index  ]
"54 C:/Program Files/Microchip/MPLABX/v6.10/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\../proc/pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"11 MCAL_Layer/GPIO/hal_gpio.c
[; ;MCAL_Layer/GPIO/hal_gpio.c: 11: volatile uint8 * tris_regs[] = {&TRISA, &TRISB, &TRISC, &TRISD, &TRISE};
[v _tris_regs `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_regs
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"13
[; ;MCAL_Layer/GPIO/hal_gpio.c: 13: volatile uint8 * port_regs[] = {&PORTA, &PORTB, &PORTC, &PORTD, &PORTE};
[v _port_regs `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_regs
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"15
[; ;MCAL_Layer/GPIO/hal_gpio.c: 15: volatile uint8 * lat_regs[] = {&LATA, &LATB, &LATC, &LATD, &LATE};
[v _lat_regs `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_regs
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"25
[; ;MCAL_Layer/GPIO/hal_gpio.c: 25: Std_ReturnType gpio_pin_direction_init(const pin_config_t * pin_config){
[v _gpio_pin_direction_init `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_direction_init ]
[v _pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"26
[; ;MCAL_Layer/GPIO/hal_gpio.c: 26:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"27
[; ;MCAL_Layer/GPIO/hal_gpio.c: 27:     if((((void*)0) == pin_config) || (pin_config->pin > 8 - 1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 275  ]
{
"28
[; ;MCAL_Layer/GPIO/hal_gpio.c: 28:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"29
[; ;MCAL_Layer/GPIO/hal_gpio.c: 29:     }
}
[e $U 276  ]
"30
[; ;MCAL_Layer/GPIO/hal_gpio.c: 30:     else{
[e :U 275 ]
{
"31
[; ;MCAL_Layer/GPIO/hal_gpio.c: 31:     switch(pin_config -> direction )
[e $U 278  ]
"32
[; ;MCAL_Layer/GPIO/hal_gpio.c: 32:     {
{
"33
[; ;MCAL_Layer/GPIO/hal_gpio.c: 33:         case(OUTPUT):
[e :U 279 ]
"34
[; ;MCAL_Layer/GPIO/hal_gpio.c: 34:             (*tris_regs[pin_config->port] &= ~((uint8)0x01<<pin_config->pin));
[e =& *U *U + &U _tris_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"35
[; ;MCAL_Layer/GPIO/hal_gpio.c: 35:             break;
[e $U 277  ]
"36
[; ;MCAL_Layer/GPIO/hal_gpio.c: 36:         case(INPUT):
[e :U 280 ]
"37
[; ;MCAL_Layer/GPIO/hal_gpio.c: 37:             (*tris_regs[pin_config->port] |= ((uint8)0x01<<pin_config->pin));
[e =| *U *U + &U _tris_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _tris_regs `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"38
[; ;MCAL_Layer/GPIO/hal_gpio.c: 38:             break;
[e $U 277  ]
"39
[; ;MCAL_Layer/GPIO/hal_gpio.c: 39:         default :
[e :U 281 ]
"40
[; ;MCAL_Layer/GPIO/hal_gpio.c: 40:             retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"41
[; ;MCAL_Layer/GPIO/hal_gpio.c: 41:             break;
[e $U 277  ]
"42
[; ;MCAL_Layer/GPIO/hal_gpio.c: 42:     }
}
[e $U 277  ]
[e :U 278 ]
[e [\ -> . *U _pin_config 2 `i , $ . `E2972 0 279
 , $ . `E2972 1 280
 281 ]
[e :U 277 ]
"43
[; ;MCAL_Layer/GPIO/hal_gpio.c: 43:     }
}
[e :U 276 ]
"44
[; ;MCAL_Layer/GPIO/hal_gpio.c: 44:     return retVal;
[e ) _retVal ]
[e $UE 274  ]
"45
[; ;MCAL_Layer/GPIO/hal_gpio.c: 45: }
[e :UE 274 ]
}
"58
[; ;MCAL_Layer/GPIO/hal_gpio.c: 58: Std_ReturnType gpio_pin_wrt_logic(const pin_config_t *pin_config, logic_t logic){
[v _gpio_pin_wrt_logic `(uc ~T0 @X0 1 ef2`*CS273`E2968 ]
{
[e :U _gpio_pin_wrt_logic ]
[v _pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `E2968 ~T0 @X0 1 r2 ]
[f ]
"59
[; ;MCAL_Layer/GPIO/hal_gpio.c: 59:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"60
[; ;MCAL_Layer/GPIO/hal_gpio.c: 60:     if((((void*)0) == pin_config) || (pin_config->pin > 8 - 1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 283  ]
{
"61
[; ;MCAL_Layer/GPIO/hal_gpio.c: 61:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"62
[; ;MCAL_Layer/GPIO/hal_gpio.c: 62:     }
}
[e $U 284  ]
"63
[; ;MCAL_Layer/GPIO/hal_gpio.c: 63:     else{
[e :U 283 ]
{
"64
[; ;MCAL_Layer/GPIO/hal_gpio.c: 64:         switch(logic){
[e $U 286  ]
{
"65
[; ;MCAL_Layer/GPIO/hal_gpio.c: 65:             case(LOW) :
[e :U 287 ]
"66
[; ;MCAL_Layer/GPIO/hal_gpio.c: 66:                 (*lat_regs[pin_config->port] &= ~((uint8)0x01<<pin_config->pin));
[e =& *U *U + &U _lat_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"67
[; ;MCAL_Layer/GPIO/hal_gpio.c: 67:                 break;
[e $U 285  ]
"68
[; ;MCAL_Layer/GPIO/hal_gpio.c: 68:             case(HIGH) :
[e :U 288 ]
"69
[; ;MCAL_Layer/GPIO/hal_gpio.c: 69:                 (*lat_regs[pin_config->port] |= ((uint8)0x01<<pin_config->pin));
[e =| *U *U + &U _lat_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"70
[; ;MCAL_Layer/GPIO/hal_gpio.c: 70:                 break;
[e $U 285  ]
"71
[; ;MCAL_Layer/GPIO/hal_gpio.c: 71:             default:
[e :U 289 ]
"72
[; ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"73
[; ;MCAL_Layer/GPIO/hal_gpio.c: 73:         }
}
[e $U 285  ]
[e :U 286 ]
[e [\ -> _logic `ui , $ -> . `E2968 0 `ui 287
 , $ -> . `E2968 1 `ui 288
 289 ]
[e :U 285 ]
"74
[; ;MCAL_Layer/GPIO/hal_gpio.c: 74:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"75
[; ;MCAL_Layer/GPIO/hal_gpio.c: 75:     }
}
[e :U 284 ]
"76
[; ;MCAL_Layer/GPIO/hal_gpio.c: 76:     return retVal;
[e ) _retVal ]
[e $UE 282  ]
"77
[; ;MCAL_Layer/GPIO/hal_gpio.c: 77: }
[e :UE 282 ]
}
"89
[; ;MCAL_Layer/GPIO/hal_gpio.c: 89: Std_ReturnType gpio_pin_get_direction_status(const pin_config_t *pin_config, direction_t *direction_status){
[v _gpio_pin_get_direction_status `(uc ~T0 @X0 1 ef2`*CS273`*E2972 ]
{
[e :U _gpio_pin_get_direction_status ]
[v _pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _direction_status `*E2972 ~T0 @X0 1 r2 ]
[f ]
"90
[; ;MCAL_Layer/GPIO/hal_gpio.c: 90:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"91
[; ;MCAL_Layer/GPIO/hal_gpio.c: 91:     if((((void*)0) == pin_config) || (((void*)0) == direction_status ) || (pin_config->pin > 8 - 1)){
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 _pin_config == -> -> -> 0 `i `*v `*E2972 _direction_status > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 291  ]
{
"92
[; ;MCAL_Layer/GPIO/hal_gpio.c: 92:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"93
[; ;MCAL_Layer/GPIO/hal_gpio.c: 93:     }
}
[e $U 292  ]
"94
[; ;MCAL_Layer/GPIO/hal_gpio.c: 94:     else{
[e :U 291 ]
{
"95
[; ;MCAL_Layer/GPIO/hal_gpio.c: 95:         *direction_status = ((*lat_regs[pin_config->port] >> pin_config->pin) & (uint8)0x01);
[e = *U _direction_status -> & >> -> *U *U + &U _lat_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux `i -> . *U _pin_config 1 `i -> -> -> 1 `i `uc `i `E2972 ]
"96
[; ;MCAL_Layer/GPIO/hal_gpio.c: 96:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"97
[; ;MCAL_Layer/GPIO/hal_gpio.c: 97:     }
}
[e :U 292 ]
"100
[; ;MCAL_Layer/GPIO/hal_gpio.c: 100:     return retVal;
[e ) _retVal ]
[e $UE 290  ]
"101
[; ;MCAL_Layer/GPIO/hal_gpio.c: 101: }
[e :UE 290 ]
}
"113
[; ;MCAL_Layer/GPIO/hal_gpio.c: 113: Std_ReturnType gpio_pin_rd_logic(const pin_config_t *pin_config, logic_t *logic){
[v _gpio_pin_rd_logic `(uc ~T0 @X0 1 ef2`*CS273`*E2968 ]
{
[e :U _gpio_pin_rd_logic ]
[v _pin_config `*CS273 ~T0 @X0 1 r1 ]
[v _logic `*E2968 ~T0 @X0 1 r2 ]
[f ]
"114
[; ;MCAL_Layer/GPIO/hal_gpio.c: 114:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"115
[; ;MCAL_Layer/GPIO/hal_gpio.c: 115:     if((((void*)0) == pin_config) || (((void*)0) == logic ) || (pin_config->pin > 8 - 1)){
[e $ ! || || == -> -> -> 0 `i `*v `*CS273 _pin_config == -> -> -> 0 `i `*v `*E2968 _logic > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 294  ]
{
"116
[; ;MCAL_Layer/GPIO/hal_gpio.c: 116:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"117
[; ;MCAL_Layer/GPIO/hal_gpio.c: 117:     }
}
[e $U 295  ]
"118
[; ;MCAL_Layer/GPIO/hal_gpio.c: 118:     else{
[e :U 294 ]
{
"119
[; ;MCAL_Layer/GPIO/hal_gpio.c: 119:         *logic = ((*port_regs[pin_config->port] >> pin_config->pin) & (uint8)0x01);
[e = *U _logic -> & >> -> *U *U + &U _port_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _port_regs `ui `ux `i -> . *U _pin_config 1 `i -> -> -> 1 `i `uc `i `E2968 ]
"120
[; ;MCAL_Layer/GPIO/hal_gpio.c: 120:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"121
[; ;MCAL_Layer/GPIO/hal_gpio.c: 121:     }
}
[e :U 295 ]
"122
[; ;MCAL_Layer/GPIO/hal_gpio.c: 122:     return retVal;
[e ) _retVal ]
[e $UE 293  ]
"123
[; ;MCAL_Layer/GPIO/hal_gpio.c: 123: }
[e :UE 293 ]
}
"134
[; ;MCAL_Layer/GPIO/hal_gpio.c: 134: Std_ReturnType gpio_pin_tgl_logic(const pin_config_t *pin_config){
[v _gpio_pin_tgl_logic `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_tgl_logic ]
[v _pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"135
[; ;MCAL_Layer/GPIO/hal_gpio.c: 135:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"136
[; ;MCAL_Layer/GPIO/hal_gpio.c: 136:     if((((void*)0) == pin_config) || (pin_config->pin > 8 - 1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 297  ]
{
"137
[; ;MCAL_Layer/GPIO/hal_gpio.c: 137:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"138
[; ;MCAL_Layer/GPIO/hal_gpio.c: 138:     }
}
[e $U 298  ]
"139
[; ;MCAL_Layer/GPIO/hal_gpio.c: 139:     else{
[e :U 297 ]
{
"140
[; ;MCAL_Layer/GPIO/hal_gpio.c: 140:         (*lat_regs[pin_config->port] ^= ((uint8)0x01<<pin_config->pin));
[e =^ *U *U + &U _lat_regs * -> . *U _pin_config 0 `ux -> -> # *U &U _lat_regs `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U _pin_config 1 `i `uc ]
"141
[; ;MCAL_Layer/GPIO/hal_gpio.c: 141:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"142
[; ;MCAL_Layer/GPIO/hal_gpio.c: 142:     }
}
[e :U 298 ]
"143
[; ;MCAL_Layer/GPIO/hal_gpio.c: 143:     return retVal;
[e ) _retVal ]
[e $UE 296  ]
"144
[; ;MCAL_Layer/GPIO/hal_gpio.c: 144: }
[e :UE 296 ]
}
"155
[; ;MCAL_Layer/GPIO/hal_gpio.c: 155: Std_ReturnType gpio_pin_init(const pin_config_t *pin_config){
[v _gpio_pin_init `(uc ~T0 @X0 1 ef1`*CS273 ]
{
[e :U _gpio_pin_init ]
[v _pin_config `*CS273 ~T0 @X0 1 r1 ]
[f ]
"156
[; ;MCAL_Layer/GPIO/hal_gpio.c: 156:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"157
[; ;MCAL_Layer/GPIO/hal_gpio.c: 157:     if((((void*)0) == pin_config) || (pin_config->pin > 8 - 1)){
[e $ ! || == -> -> -> 0 `i `*v `*CS273 _pin_config > -> . *U _pin_config 1 `i - -> 8 `i -> 1 `i 300  ]
{
"158
[; ;MCAL_Layer/GPIO/hal_gpio.c: 158:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"159
[; ;MCAL_Layer/GPIO/hal_gpio.c: 159:     }
}
[e $U 301  ]
"160
[; ;MCAL_Layer/GPIO/hal_gpio.c: 160:     else{
[e :U 300 ]
{
"161
[; ;MCAL_Layer/GPIO/hal_gpio.c: 161:        retVal = gpio_pin_direction_init(pin_config);
[e = _retVal ( _gpio_pin_direction_init (1 _pin_config ]
"162
[; ;MCAL_Layer/GPIO/hal_gpio.c: 162:        retVal = gpio_pin_wrt_logic(pin_config,pin_config->logic);
[e = _retVal ( _gpio_pin_wrt_logic (2 , _pin_config -> . *U _pin_config 3 `E2968 ]
"164
[; ;MCAL_Layer/GPIO/hal_gpio.c: 164:     }
}
[e :U 301 ]
"165
[; ;MCAL_Layer/GPIO/hal_gpio.c: 165:     return retVal;
[e ) _retVal ]
[e $UE 299  ]
"166
[; ;MCAL_Layer/GPIO/hal_gpio.c: 166: }
[e :UE 299 ]
}
"178
[; ;MCAL_Layer/GPIO/hal_gpio.c: 178: Std_ReturnType gpio_port_direction_init(port_index_t port, uint8 direction){
[v _gpio_port_direction_init `(uc ~T0 @X0 1 ef2`E2986`uc ]
{
[e :U _gpio_port_direction_init ]
[v _port `E2986 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
[f ]
"179
[; ;MCAL_Layer/GPIO/hal_gpio.c: 179:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"180
[; ;MCAL_Layer/GPIO/hal_gpio.c: 180:     if( port > 8 - 1){
[e $ ! > -> _port `ui -> - -> 8 `i -> 1 `i `ui 303  ]
{
"181
[; ;MCAL_Layer/GPIO/hal_gpio.c: 181:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"182
[; ;MCAL_Layer/GPIO/hal_gpio.c: 182:     }
}
[e $U 304  ]
"183
[; ;MCAL_Layer/GPIO/hal_gpio.c: 183:     else{
[e :U 303 ]
{
"184
[; ;MCAL_Layer/GPIO/hal_gpio.c: 184:         *tris_regs[port] = direction;
[e = *U *U + &U _tris_regs * -> _port `ux -> -> # *U &U _tris_regs `ui `ux _direction ]
"185
[; ;MCAL_Layer/GPIO/hal_gpio.c: 185:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"186
[; ;MCAL_Layer/GPIO/hal_gpio.c: 186:     }
}
[e :U 304 ]
"187
[; ;MCAL_Layer/GPIO/hal_gpio.c: 187:     return retVal;
[e ) _retVal ]
[e $UE 302  ]
"188
[; ;MCAL_Layer/GPIO/hal_gpio.c: 188: }
[e :UE 302 ]
}
"200
[; ;MCAL_Layer/GPIO/hal_gpio.c: 200: Std_ReturnType gpio_port_get_direction_status(port_index_t port, uint8 *direction_status){
[v _gpio_port_get_direction_status `(uc ~T0 @X0 1 ef2`E2986`*uc ]
{
[e :U _gpio_port_get_direction_status ]
[v _port `E2986 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
[f ]
"201
[; ;MCAL_Layer/GPIO/hal_gpio.c: 201:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"202
[; ;MCAL_Layer/GPIO/hal_gpio.c: 202:     if(( port > 8 - 1) || (((void*)0) == direction_status)){
[e $ ! || > -> _port `ui -> - -> 8 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _direction_status 306  ]
{
"203
[; ;MCAL_Layer/GPIO/hal_gpio.c: 203:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"204
[; ;MCAL_Layer/GPIO/hal_gpio.c: 204:     }
}
[e $U 307  ]
"205
[; ;MCAL_Layer/GPIO/hal_gpio.c: 205:     else{
[e :U 306 ]
{
"206
[; ;MCAL_Layer/GPIO/hal_gpio.c: 206:         *direction_status = *tris_regs[port];
[e = *U _direction_status *U *U + &U _tris_regs * -> _port `ux -> -> # *U &U _tris_regs `ui `ux ]
"207
[; ;MCAL_Layer/GPIO/hal_gpio.c: 207:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"208
[; ;MCAL_Layer/GPIO/hal_gpio.c: 208:     }
}
[e :U 307 ]
"209
[; ;MCAL_Layer/GPIO/hal_gpio.c: 209:     return retVal;
[e ) _retVal ]
[e $UE 305  ]
"210
[; ;MCAL_Layer/GPIO/hal_gpio.c: 210: }
[e :UE 305 ]
}
"222
[; ;MCAL_Layer/GPIO/hal_gpio.c: 222: Std_ReturnType gpio_port_wrt_logic(port_index_t port, uint8 logic){
[v _gpio_port_wrt_logic `(uc ~T0 @X0 1 ef2`E2986`uc ]
{
[e :U _gpio_port_wrt_logic ]
[v _port `E2986 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
[f ]
"223
[; ;MCAL_Layer/GPIO/hal_gpio.c: 223:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"224
[; ;MCAL_Layer/GPIO/hal_gpio.c: 224:     if(port > 8 - 1){
[e $ ! > -> _port `ui -> - -> 8 `i -> 1 `i `ui 309  ]
{
"225
[; ;MCAL_Layer/GPIO/hal_gpio.c: 225:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"226
[; ;MCAL_Layer/GPIO/hal_gpio.c: 226:     }
}
[e $U 310  ]
"227
[; ;MCAL_Layer/GPIO/hal_gpio.c: 227:     else{
[e :U 309 ]
{
"228
[; ;MCAL_Layer/GPIO/hal_gpio.c: 228:         *lat_regs[port] = logic;
[e = *U *U + &U _lat_regs * -> _port `ux -> -> # *U &U _lat_regs `ui `ux _logic ]
"229
[; ;MCAL_Layer/GPIO/hal_gpio.c: 229:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"230
[; ;MCAL_Layer/GPIO/hal_gpio.c: 230:     }
}
[e :U 310 ]
"231
[; ;MCAL_Layer/GPIO/hal_gpio.c: 231:     return retVal;
[e ) _retVal ]
[e $UE 308  ]
"232
[; ;MCAL_Layer/GPIO/hal_gpio.c: 232: }
[e :UE 308 ]
}
"244
[; ;MCAL_Layer/GPIO/hal_gpio.c: 244: Std_ReturnType gpio_port_rd_logic(port_index_t port, uint8 *logic){
[v _gpio_port_rd_logic `(uc ~T0 @X0 1 ef2`E2986`*uc ]
{
[e :U _gpio_port_rd_logic ]
[v _port `E2986 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
[f ]
"245
[; ;MCAL_Layer/GPIO/hal_gpio.c: 245:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"246
[; ;MCAL_Layer/GPIO/hal_gpio.c: 246:     if((port > 8 - 1) || (((void*)0) == logic)){
[e $ ! || > -> _port `ui -> - -> 8 `i -> 1 `i `ui == -> -> -> 0 `i `*v `*uc _logic 312  ]
{
"247
[; ;MCAL_Layer/GPIO/hal_gpio.c: 247:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"248
[; ;MCAL_Layer/GPIO/hal_gpio.c: 248:     }
}
[e $U 313  ]
"249
[; ;MCAL_Layer/GPIO/hal_gpio.c: 249:     else{
[e :U 312 ]
{
"250
[; ;MCAL_Layer/GPIO/hal_gpio.c: 250:         *logic = *lat_regs[port];
[e = *U _logic *U *U + &U _lat_regs * -> _port `ux -> -> # *U &U _lat_regs `ui `ux ]
"251
[; ;MCAL_Layer/GPIO/hal_gpio.c: 251:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"252
[; ;MCAL_Layer/GPIO/hal_gpio.c: 252:     }
}
[e :U 313 ]
"253
[; ;MCAL_Layer/GPIO/hal_gpio.c: 253:     return retVal;
[e ) _retVal ]
[e $UE 311  ]
"254
[; ;MCAL_Layer/GPIO/hal_gpio.c: 254: }
[e :UE 311 ]
}
"265
[; ;MCAL_Layer/GPIO/hal_gpio.c: 265: Std_ReturnType gpio_port_tgl_logic(port_index_t port){
[v _gpio_port_tgl_logic `(uc ~T0 @X0 1 ef1`E2986 ]
{
[e :U _gpio_port_tgl_logic ]
[v _port `E2986 ~T0 @X0 1 r1 ]
[f ]
"266
[; ;MCAL_Layer/GPIO/hal_gpio.c: 266:     Std_ReturnType retVal = (Std_ReturnType)0x01;;
[v _retVal `uc ~T0 @X0 1 a ]
[e = _retVal -> -> 1 `i `uc ]
"267
[; ;MCAL_Layer/GPIO/hal_gpio.c: 267:     if(port > 8 - 1){
[e $ ! > -> _port `ui -> - -> 8 `i -> 1 `i `ui 315  ]
{
"268
[; ;MCAL_Layer/GPIO/hal_gpio.c: 268:         retVal = (Std_ReturnType)0x00;;
[e = _retVal -> -> 0 `i `uc ]
"269
[; ;MCAL_Layer/GPIO/hal_gpio.c: 269:     }
}
[e $U 316  ]
"270
[; ;MCAL_Layer/GPIO/hal_gpio.c: 270:     else{
[e :U 315 ]
{
"272
[; ;MCAL_Layer/GPIO/hal_gpio.c: 272:         retVal = (Std_ReturnType)0x01;;
[e = _retVal -> -> 1 `i `uc ]
"273
[; ;MCAL_Layer/GPIO/hal_gpio.c: 273:     }
}
[e :U 316 ]
"274
[; ;MCAL_Layer/GPIO/hal_gpio.c: 274:     return retVal;
[e ) _retVal ]
[e $UE 314  ]
"275
[; ;MCAL_Layer/GPIO/hal_gpio.c: 275: }
[e :UE 314 ]
}
